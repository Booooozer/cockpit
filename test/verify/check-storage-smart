#!/usr/bin/python3 -cimport os, sys; os.execv(os.path.dirname(sys.argv[1]) + "/../common/pywrap", sys.argv)

# This file is part of Cockpit.
#
# Copyright (C) 2025 Red Hat, Inc.
#
# Cockpit is free software; you can redistribute it and/or modify it
# under the terms of the GNU Lesser General Public License as published by
# the Free Software Foundation; either version 2.1 of the License, or
# (at your option) any later version.
#
# Cockpit is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
# Lesser General Public License for more details.
#
# You should have received a copy of the GNU Lesser General Public License
# along with Cockpit; If not, see <https://www.gnu.org/licenses/>.

import storagelib
import testlib


class TestStorageSmart(storagelib.StorageCase):

    def testSmart(self):
        def set_smart_dump(name: str, block: str):
            self.machine.execute(f"udisksctl smart-simulate -f /tmp/smart-dumps/{name} -b {block}")

        def check_smart_info(assessment: str, hours: str, status: str, bad_sectors: str | None = None,
                             failing_attrs: str | None = None, progress: str | None = None):
            self.assertIn(assessment, b.text(self.card_desc("S.M.A.R.T.", "Assessment")))
            b.wait_in_text(self.card_desc("S.M.A.R.T.", "Power on hours"), hours)
            b.wait_in_text(self.card_desc("S.M.A.R.T.", "Selftest status"), status)
            if bad_sectors is not None:
                b.wait_in_text(self.card_desc("S.M.A.R.T.", "Number of bad sectors"), bad_sectors)
            if failing_attrs is not None:
                b.wait_in_text(self.card_desc("S.M.A.R.T.", "Attributes failing"), failing_attrs)
            if progress is not None:
                b.wait_in_text(self.card_desc("S.M.A.R.T.", "Progress"), progress)

        m = self.machine
        b = self.browser

        m.upload(["verify/files/smart-dumps"], "/tmp")
        # new disk, no failing sectors
        set_smart_dump("MCCOE64GEMPP--2.9.09", "/dev/sda")

        self.login_and_go("/storage")
        b.wait_visible(self.card("Storage"))
        self.click_card_row("Storage", name="sda")
        b.wait_visible(self.card("S.M.A.R.T."))
        check_smart_info("Disk is OK", "1 hours", "Successful")

        # Disk with running self test
        set_smart_dump("SAMSUNG_MMCQE28G8MUP--0VA_VAM08L1Q", "/dev/sda")
        check_smart_info("Disk is OK", "2417 hours", "In progress", progress="30%")

        # Interrupted self test, disk is OK
        set_smart_dump("INTEL_SSDSA2MH080G1GC--045C8820", "/dev/sda")
        check_smart_info("Disk is OK", "2309 hours", "Interrupted")

        # Aborted self test and has known bad sector
        set_smart_dump("ST9160821AS--3.CLH", "/dev/sda")
        check_smart_info("Disk is failing", "556 hours", "Aborted", bad_sectors="1")

        # Multiple bad sectors
        set_smart_dump("Maxtor_96147H8--BAC51KJ0", "/dev/sda")
        check_smart_info("Disk is failing", "2017 hours", "Successful", bad_sectors="71")

        # Multiple bad sectors with failing attribute
        set_smart_dump("Maxtor_96147H8--BAC51KJ0--2", "/dev/sda")
        check_smart_info("Disk is failing", "2263 hours", "Successful", bad_sectors="71", failing_attrs="1")

if __name__ == '__main__':
    testlib.test_main()
